# Generated by labman from dut kevin

import tbot
from tbot.machine import board, channel, connector, linux
from tbot.tc import git, shell, uboot
from flash import Flash
from send import Send
from dli import Dli
from servo import Servo

class KevinUBootBuilder(uboot.UBootBuilder):
    name = "kevin"
    defconfig = "chromebook_kevin_defconfig"
    toolchain = "aarch64"

class Kevin(
    connector.ConsoleConnector,
    board.PowerControl,
    board.Board,
    Flash,
    Send,
    Dli,
    Servo,
):
    name = "kevin"
    desc = "Chromebook Kevin"
    dli_hostname = "192.168.4.27"
    dli_outlet = "1"
    dli_password = "1234"
    dli_user = "admin"
    em100_chip = "gd25lq64"
    em100_serial = "DP137244"
    send_device = "/dev/usbdev-kevin"
    servo_port = 0x26b3
    usbboot_loadaddr = 0x2021400
    usbboot_port = "1-4.3.4"

    ether_mac = "none"

    def poweron(self) -> None:
        """Procedure to turn power on."""
        self.dli_reset()
        self.servo_reset()

    def poweroff(self) -> None:
        """Procedure to turn power off."""
        self.dli_off()

    def connect(self, mach) -> channel.Channel:
        """Connect to the board's serial interface."""
        self.console_uart = self.servo_get_tty()
        return mach.open_channel("picocom", "-q", "-b", "115200", self.console_uart)

    def flash(self, repo: git.GitRepository) -> None:
        self.flash_em100(repo)

    def send(self, repo: git.GitRepository) -> None:
        self.servo_recovery()
        self.send_rockchip(repo)


class KevinUBoot(
    board.Connector,
    board.UBootAutobootIntercept,
    board.UBootShell,
):
    prompt = "=> "
    build = KevinUBootBuilder()


class KevinLinux(
    board.Connector,
    board.LinuxBootLogin,
    linux.Bash,
):
    username = ""
    password = ""


BOARD = Kevin
UBOOT = KevinUBoot
LINUX = KevinLinux
