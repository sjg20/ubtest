# Generated by labman from dut c4

import tbot
from tbot.machine import board, channel, connector, linux
from tbot.tc import git, shell, uboot
from flash import Flash
from send import Send
from blobs import Blobs
from dli import Dli
from sdwire import Sdwire

class C4UBootBuilder(uboot.UBootBuilder, Blobs):
    name = "c4"
    defconfig = "odroid-c4_defconfig"
    toolchain = "aarch64"
    blob_dest = "."
    blob_src = "/vid/software/devel/amlogic/bin/*"

    def do_patch(self, repo: git.GitRepository) -> None:
        self.add_blobs(repo)


class C4(
    connector.ConsoleConnector,
    board.PowerControl,
    board.Board,
    Flash,
    Send,
    Dli,
    Sdwire,
):
    name = "c4"
    desc = "Hardkernel Odroid-C4"
    block_device = "/dev/sdcard12"
    console_uart = "/dev/ttyusb_port23"
    dli_hostname = "192.168.4.27"
    dli_outlet = "5"
    dli_password = "1234"
    dli_user = "admin"
    sdwire_serial = "da64"

    ether_mac = None

    def poweron(self) -> None:
        """Procedure to turn power on."""
        self.sdwire_dut()
        self.dli_reset()

    def poweroff(self) -> None:
        """Procedure to turn power off."""
        self.dli_off()
        self.sdwire_ts()

    def connect(self, mach) -> channel.Channel:
        """Connect to the board's serial interface."""
        return mach.open_channel("picocom", "-q", "-b", "115200", self.console_uart)

    def flash(self, repo: git.GitRepository) -> None:
        self.sdwire_ts()
        self.flash_amlogic(repo)
        self.sdwire_dut()

    def send(self, repo: git.GitRepository) -> None:
        self.sdwire_ts()
        self.dli_reset()
        self.send_None(repo)
        self.sdwire_dut()


class C4UBoot(
    board.Connector,
    board.UBootAutobootIntercept,
    board.UBootShell,
):
    prompt = "=> "
    build = C4UBootBuilder()


class C4Linux(
    board.Connector,
    board.LinuxBootLogin,
    linux.Bash,
):
    username = ""
    password = ""


BOARD = C4
UBOOT = C4UBoot
LINUX = C4Linux
