# Generated by labman from dut ff3399

import tbot
from tbot.machine import board, channel, connector, linux
from tbot.tc import git, shell, uboot
from flash import Flash
from send import Send
from blobs import Blobs
from sdwire import Sdwire
from usbrelay import Usbrelay

class Ff3399UBootBuilder(uboot.UBootBuilder, Blobs):
    name = "ff3399"
    defconfig = "firefly-rk3399_defconfig"
    toolchain = "aarch64"
    blob_dest = "."
    blob_src = "/vid/software/devel/rk3399/bl31.elf"

    def do_patch(self, repo: git.GitRepository) -> None:
        self.add_blobs(repo)


class Ff3399(
    connector.ConsoleConnector,
    board.PowerControl,
    board.Board,
    Flash,
    Send,
    Sdwire,
    Usbrelay,
):
    name = "ff3399"
    desc = "Firefly RK3399"
    block_device = "/dev/sdcard10"
    console_uart = "/dev/ttyusb_port19"
    sdwire_serial = "sdwireda7"
    usbrelay_name = "7QMBS"
    usbrelay_reset = "1"

    ether_mac = "unknown"

    def poweron(self) -> None:
        """Procedure to turn power on."""
        self.sdwire_dut()
        self.usbrelay_toggle_reset()

    def poweroff(self) -> None:
        """Procedure to turn power off."""
        self.sdwire_ts()

    def connect(self, mach) -> channel.Channel:
        """Connect to the board's serial interface."""
        return mach.open_channel("picocom", "-q", "-b", "1500000", self.console_uart)

    def flash(self, repo: git.GitRepository) -> None:
        self.sdwire_ts()
        self.flash_rockchip3399_tpl(repo)
        self.sdwire_dut()

    def send(self, repo: git.GitRepository) -> None:
        self.sdwire_ts()
        self.send_None(repo)
        self.sdwire_dut()


class Ff3399UBoot(
    board.Connector,
    board.UBootAutobootIntercept,
    board.UBootShell,
):
    prompt = "=> "
    build = Ff3399UBootBuilder()


class Ff3399Linux(
    board.Connector,
    board.LinuxBootLogin,
    linux.Bash,
):
    username = ""
    password = ""


BOARD = Ff3399
UBOOT = Ff3399UBoot
LINUX = Ff3399Linux
