# Generated by labman from dut lcdk

import tbot
from tbot.machine import board, channel, connector, linux
from tbot.tc import git, shell, uboot
from flash import Flash
from send import Send
from dli import Dli
from sdwire import Sdwire
from usbrelay import Usbrelay

class LcdkUBootBuilder(uboot.UBootBuilder):
    name = "lcdk"
    defconfig = "omapl138_lcdk_defconfig"
    toolchain = "armv7-a"

class Lcdk(
    connector.ConsoleConnector,
    board.PowerControl,
    board.Board,
    Flash,
    Send,
    Dli,
    Sdwire,
    Usbrelay,
):
    name = "lcdk"
    desc = "OMAPL138_LCDK"
    block_device = "/dev/sdcard9"
    console_uart = "/dev/ttyusb_port18"
    dli_hostname = "192.168.4.22"
    dli_outlet = "6"
    dli_password = "1234"
    dli_user = "admin"
    sdwire_serial = "sdwireda6"
    usbrelay_name = "7QMBS"
    usbrelay_reset = "8"

    ether_mac = "02:00:00:00:53:49"

    def poweron(self) -> None:
        """Procedure to turn power on."""
        self.sdwire_dut()
        self.dli_reset()
        self.usbrelay_toggle_reset()

    def poweroff(self) -> None:
        """Procedure to turn power off."""
        self.dli_off()
        self.sdwire_ts()

    def connect(self, mach) -> channel.Channel:
        """Connect to the board's serial interface."""
        return mach.open_channel("picocom", "-q", "-b", "115200", self.console_uart)

    def flash(self, repo: git.GitRepository) -> None:
        self.sdwire_ts()
        self.flash_davinci(repo)
        self.sdwire_dut()

    def send(self, repo: git.GitRepository) -> None:
        self.sdwire_ts()
        self.dli_reset()
        self.send_None(repo)
        self.sdwire_dut()


class LcdkUBoot(
    board.Connector,
    board.UBootAutobootIntercept,
    board.UBootShell,
):
    prompt = "=> "
    build = LcdkUBootBuilder()


class LcdkLinux(
    board.Connector,
    board.LinuxBootLogin,
    linux.Bash,
):
    username = ""
    password = ""


BOARD = Lcdk
UBOOT = LcdkUBoot
LINUX = LcdkLinux
