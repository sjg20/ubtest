# Generated by labman from dut coral

import tbot
from tbot.machine import board, channel, connector, linux
from tbot.tc import git, shell, uboot
from flash import Flash
from send import Send
from blobs import Blobs
from dli import Dli
from servo import Servo

class CoralUBootBuilder(uboot.UBootBuilder, Blobs):
    name = "coral"
    defconfig = "chromebook_coral_defconfig"
    toolchain = "i386"
    blob_dest = "board/google/chromebook_coral"
    blob_src = "/vid/software/devel/coral/bin/*.bin"

    def do_patch(self, repo: git.GitRepository) -> None:
        self.add_blobs(repo)


class Coral(
    connector.ConsoleConnector,
    board.PowerControl,
    board.Board,
    Flash,
    Send,
    Dli,
    Servo,
):
    name = "coral"
    desc = "Chromebook Coral"
    dli_hostname = "192.168.4.22"
    dli_outlet = "2"
    dli_password = "1234"
    dli_user = "admin"
    em100_chip = "w25q128fw"
    em100_serial = "DP033694"
    servo_port = 0x26b1

    ether_mac = "none"

    def poweron(self) -> None:
        """Procedure to turn power on."""
        self.dli_reset()
        self.servo_reset()

    def poweroff(self) -> None:
        """Procedure to turn power off."""
        self.dli_off()

    def connect(self, mach) -> channel.Channel:
        """Connect to the board's serial interface."""
        self.console_uart = self.servo_get_tty()
        return mach.open_channel("picocom", "-q", "-b", "115200", self.console_uart)

    def flash(self, repo: git.GitRepository) -> None:
        self.flash_em100(repo)

    def send(self, repo: git.GitRepository) -> None:
        self.dli_reset()
        self.send_None(repo)


class CoralUBoot(
    board.Connector,
    board.UBootAutobootIntercept,
    board.UBootShell,
):
    prompt = "=> "
    build = CoralUBootBuilder()


class CoralLinux(
    board.Connector,
    board.LinuxBootLogin,
    linux.Bash,
):
    username = ""
    password = ""


BOARD = Coral
UBOOT = CoralUBoot
LINUX = CoralLinux
