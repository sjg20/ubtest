# Generated by labman from dut rpi2

import tbot
from tbot.machine import board, channel, connector, linux
from tbot.tc import git, shell, uboot
from flash import Flash
from send import Send
from sdwire import Sdwire
from ykush import Ykush

class Rpi2UBootBuilder(uboot.UBootBuilder):
    name = "rpi2"
    defconfig = "rpi_2_defconfig"
    toolchain = "armv7-a"

class Rpi2(
    connector.ConsoleConnector,
    board.PowerControl,
    board.Board,
    Flash,
    Send,
    Sdwire,
    Ykush,
):
    name = "rpi2"
    desc = "Raspberry Pi 2"
    block_device = "/dev/sdcard8"
    console_uart = "/dev/ttyusb_port1"
    mount_point = "rpi2_boot"
    mount_uuid = "4D32-1997"
    sdwire_serial = "sdwireda5"
    ykush_port = "3"
    ykush_serial = "YK18511"

    ether_mac = "unknown"

    def poweron(self) -> None:
        """Procedure to turn power on."""
        self.sdwire_dut()
        self.ykush_reset()

    def poweroff(self) -> None:
        """Procedure to turn power off."""
        self.ykush_off()
        self.sdwire_ts()

    def connect(self, mach) -> channel.Channel:
        """Connect to the board's serial interface."""
        return mach.open_channel("picocom", "-q", "-b", "115200", self.console_uart)

    def flash(self, repo: git.GitRepository) -> None:
        self.sdwire_ts()
        self.flash_rpi2(repo)
        self.sdwire_dut()

    def send(self, repo: git.GitRepository) -> None:
        self.sdwire_ts()
        self.ykush_reset()
        self.send_None(repo)
        self.sdwire_dut()


class Rpi2UBoot(
    board.Connector,
    board.UBootAutobootIntercept,
    board.UBootShell,
):
    prompt = "=> "
    build = Rpi2UBootBuilder()


class Rpi2Linux(
    board.Connector,
    board.LinuxBootLogin,
    linux.Bash,
):
    username = "pi"
    password = "raspberry"


BOARD = Rpi2
UBOOT = Rpi2UBoot
LINUX = Rpi2Linux
