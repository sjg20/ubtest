# Generated by labman from dut bbb

import tbot
from tbot.machine import board, channel, connector, linux
from tbot.tc import git, shell, uboot
from flash import Flash
from send import Send
from dli import Dli
from sdwire import Sdwire
from usbrelay import Usbrelay

class BbbUBootBuilder(uboot.UBootBuilder):
    name = "bbb"
    defconfig = "am335x_boneblack_vboot_defconfig"
    toolchain = "armv7-a"

class Bbb(
    connector.ConsoleConnector,
    board.PowerControl,
    board.Board,
    Flash,
    Send,
    Dli,
    Sdwire,
    Usbrelay,
):
    name = "bbb"
    desc = "TI Beaglebone Black"
    console_uart = "/dev/ttyusb_port21"
    dli_hostname = "192.168.4.22"
    dli_outlet = "4"
    dli_password = "1234"
    dli_user = "admin"
    mount_point = "bbb_boot"
    mount_uuid = "CC94-AA32"
    sdwire_serial = "da62"
    usbrelay_name = "8QMBS"
    usbrelay_reset = "6"

    ether_mac = None

    def poweron(self) -> None:
        """Procedure to turn power on."""
        self.sdwire_dut()
        self.dli_reset()
        self.usbrelay_toggle_reset()

    def poweroff(self) -> None:
        """Procedure to turn power off."""
        self.dli_off()
        self.sdwire_ts()

    def connect(self, mach) -> channel.Channel:
        """Connect to the board's serial interface."""
        return mach.open_channel("picocom", "-q", "-b", "115200", self.console_uart)

    def flash(self, repo: git.GitRepository) -> None:
        self.sdwire_ts()
        self.flash_bbb(repo)
        self.sdwire_dut()

    def send(self, repo: git.GitRepository) -> None:
        self.sdwire_ts()
        self.dli_reset()
        self.send_None(repo)
        self.sdwire_dut()


class BbbUBoot(
    board.Connector,
    board.UBootAutobootIntercept,
    board.UBootShell,
):
    prompt = "=> "
    build = BbbUBootBuilder()


class BbbLinux(
    board.Connector,
    board.LinuxBootLogin,
    linux.Bash,
):
    username = ""
    password = ""


BOARD = Bbb
UBOOT = BbbUBoot
LINUX = BbbLinux
