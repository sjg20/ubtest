# Generated by labman from dut salmon

import tbot
from tbot.machine import board, channel, connector, linux
from tbot.tc import git, shell, uboot
from flash import Flash
from send import Send
from usbrelay import Usbrelay

class SalmonUBootBuilder(uboot.UBootBuilder):
    name = "salmon"
    defconfig = "snappermx6_defconfig"
    toolchain = "armv7-a"

class Salmon(
    connector.ConsoleConnector,
    board.PowerControl,
    board.Board,
    Flash,
    Send,
    Usbrelay,
):
    name = "salmon"
    desc = "Snapper MX6"
    console_uart = "192.168.4.23:2002"
    send_device = "/dev/usbdev-snappermx6"
    usbboot_loadaddr = 0x908000
    usbboot_port = "1-4.2.3"
    usbrelay_name = "QAAMZ"
    usbrelay_recovery = "1"
    usbrelay_reset = "2"

    ether_mac = None

    def poweron(self) -> None:
        """Procedure to turn power on."""
        self.usbrelay_toggle_reset()

    def poweroff(self) -> None:
        """Procedure to turn power off."""
        pass

    def connect(self, mach) -> channel.Channel:
        """Connect to the board's serial interface."""
        return mach.open_channel("bash", "-c", "stty raw; nc 192.168.4.23 2002")

    def flash(self, repo: git.GitRepository) -> None:
        self.flash_imx(repo)

    def send(self, repo: git.GitRepository) -> None:
        self.usbrelay_set_recovery(True)
        self.usbrelay_set_reset(True)
        self.usbrelay_delay()
        self.usbrelay_set_reset(False)
        self.usbrelay_delay()
        self.usbrelay_set_recovery(False)
        self.send_imx(repo)


class SalmonUBoot(
    board.Connector,
    board.UBootAutobootIntercept,
    board.UBootShell,
):
    prompt = "=> "
    build = SalmonUBootBuilder()


class SalmonLinux(
    board.Connector,
    board.LinuxBootLogin,
    linux.Bash,
):
    username = ""
    password = ""


BOARD = Salmon
UBOOT = SalmonUBoot
LINUX = SalmonLinux
