# Generated by labman from dut bob

import tbot
from tbot.machine import board, channel, connector, linux
from tbot.tc import git, shell, uboot
from flash import Flash
from send import Send
from blobs import Blobs
from servo import Servo

class BobUBootBuilder(uboot.UBootBuilder, Blobs):
    name = "bob"
    defconfig = "chromebook_bob_defconfig"
    toolchain = "aarch64"
    blob_dest = "."
    blob_src = "/vid/software/devel/rk3399/bl31.elf"

    def do_patch(self, repo: git.GitRepository) -> None:
        self.add_blobs(repo)


class Bob(
    connector.ConsoleConnector,
    board.PowerControl,
    board.Board,
    Flash,
    Send,
    Servo,
):
    name = "bob"
    desc = "Chromebook Bok"
    em100_chip = "GD25LQ32"
    em100_serial = "DP139156"
    servo_port = 0x26b0

    ether_mac = "none"

    def poweron(self) -> None:
        """Procedure to turn power on."""
        self.servo_reset()

    def poweroff(self) -> None:
        """Procedure to turn power off."""
        pass

    def connect(self, mach) -> channel.Channel:
        """Connect to the board's serial interface."""
        self.console_uart = self.servo_get_tty()
        return mach.open_channel("picocom", "-q", "-b", "115200", self.console_uart)

    def flash(self, repo: git.GitRepository) -> None:
        self.flash_em100(repo)

    def send(self, repo: git.GitRepository) -> None:
        self.servo_reset()
        self.send_None(repo)


class BobUBoot(
    board.Connector,
    board.UBootAutobootIntercept,
    board.UBootShell,
):
    prompt = "=> "
    build = BobUBootBuilder()


class BobLinux(
    board.Connector,
    board.LinuxBootLogin,
    linux.Bash,
):
    username = "root"
    password = "test0000"


BOARD = Bob
UBOOT = BobUBoot
LINUX = BobLinux
