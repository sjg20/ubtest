# Generated by labman from dut rpi3

import tbot
from tbot.machine import board, channel, connector, linux
from tbot.tc import git, shell, uboot
from flash import Flash
from send import Send
from sdwire import Sdwire
from ykush import Ykush

class Rpi3UBootBuilder(uboot.UBootBuilder):
    name = "rpi3"
    defconfig = "rpi_3_32b_defconfig"
    toolchain = "armv7-a"

class Rpi3(
    connector.ConsoleConnector,
    board.PowerControl,
    board.Board,
    Flash,
    Send,
    Sdwire,
    Ykush,
):
    name = "rpi3"
    desc = "Raspberry Pi 3b Fedora 34"
    console_uart = "/dev/ttyusb_port1"
    mount_point = "rpi3_b_boot"
    mount_uuid = "5B0C-97DF"
    sdwire_serial = "sdwire-18"
    ykush_port = "1"
    ykush_serial = "YK17698"

    ether_mac = "b8:27:eb:b4:f9:f2"

    def poweron(self) -> None:
        """Procedure to turn power on."""
        self.sdwire_dut()
        self.ykush_reset()

    def poweroff(self) -> None:
        """Procedure to turn power off."""
        self.ykush_off()
        self.sdwire_ts()
        tbot.log.message('Exiting poweroff')

    def connect(self, mach) -> channel.Channel:
        """Connect to the board's serial interface."""
        return mach.open_channel("picocom", "-q", "-b", "115200", self.console_uart)

    def flash(self, repo: git.GitRepository) -> None:
        self.sdwire_ts()
        self.flash_rpi(repo)
        self.sdwire_dut()

    def send(self, repo: git.GitRepository) -> None:
        self.sdwire_ts()
        self.ykush_reset()
        self.send_None(repo)
        self.sdwire_dut()


class Rpi3UBoot(
    board.Connector,
    board.UBootAutobootIntercept,
    board.UBootShell,
):
    prompt = "U-Boot> "
    build = Rpi3UBootBuilder()


class Rpi3Linux(
    board.Connector,
    board.LinuxBootLogin,
    linux.Bash,
):
    username = "pi"
    password = "raspberry"


BOARD = Rpi3
UBOOT = Rpi3UBoot
LINUX = Rpi3Linux
